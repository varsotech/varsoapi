-- create "roles" table
CREATE TABLE "roles" ("id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, "uuid" uuid NOT NULL, "key" character varying NOT NULL, "permissions" jsonb NOT NULL, PRIMARY KEY ("id"));
-- create index "role_key" to table: "roles"
CREATE UNIQUE INDEX "role_key" ON "roles" ("key");
-- create index "role_uuid" to table: "roles"
CREATE UNIQUE INDEX "role_uuid" ON "roles" ("uuid");
-- create index "roles_key_key" to table: "roles"
CREATE UNIQUE INDEX "roles_key_key" ON "roles" ("key");
-- create index "roles_uuid_key" to table: "roles"
CREATE UNIQUE INDEX "roles_uuid_key" ON "roles" ("uuid");
-- drop index "users_uuid_key" from table: "users"
DROP INDEX "users_uuid_key";
-- modify "users" table
ALTER TABLE "users" DROP CONSTRAINT "users_pkey", DROP COLUMN "id", ALTER COLUMN "email" SET NOT NULL, DROP COLUMN "username", ALTER COLUMN "password" SET NOT NULL, ALTER COLUMN "salt" SET NOT NULL, DROP COLUMN "discord_user_id", DROP COLUMN "name", ADD PRIMARY KEY ("uuid");
-- create "user_roles" table
CREATE TABLE "user_roles" ("user_id" uuid NOT NULL, "role_id" bigint NOT NULL, PRIMARY KEY ("user_id", "role_id"), CONSTRAINT "user_roles_role_id" FOREIGN KEY ("role_id") REFERENCES "roles" ("id") ON UPDATE NO ACTION ON DELETE CASCADE, CONSTRAINT "user_roles_user_id" FOREIGN KEY ("user_id") REFERENCES "users" ("uuid") ON UPDATE NO ACTION ON DELETE CASCADE);
