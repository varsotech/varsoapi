// Code generated by ent, DO NOT EDIT.

package organization

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/varsotech/varsoapi/src/services/app/internal/ent/build/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldCreateTime, v))
}

// UniqueName applies equality check predicate on the "unique_name" field. It's identical to UniqueNameEQ.
func UniqueName(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldUniqueName, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldName, v))
}

// WebsiteURL applies equality check predicate on the "website_url" field. It's identical to WebsiteURLEQ.
func WebsiteURL(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldWebsiteURL, v))
}

// RssFeedURL applies equality check predicate on the "rss_feed_url" field. It's identical to RssFeedURLEQ.
func RssFeedURL(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldRssFeedURL, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldCreateTime, v))
}

// UniqueNameEQ applies the EQ predicate on the "unique_name" field.
func UniqueNameEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldUniqueName, v))
}

// UniqueNameNEQ applies the NEQ predicate on the "unique_name" field.
func UniqueNameNEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldUniqueName, v))
}

// UniqueNameIn applies the In predicate on the "unique_name" field.
func UniqueNameIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldUniqueName, vs...))
}

// UniqueNameNotIn applies the NotIn predicate on the "unique_name" field.
func UniqueNameNotIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldUniqueName, vs...))
}

// UniqueNameGT applies the GT predicate on the "unique_name" field.
func UniqueNameGT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldUniqueName, v))
}

// UniqueNameGTE applies the GTE predicate on the "unique_name" field.
func UniqueNameGTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldUniqueName, v))
}

// UniqueNameLT applies the LT predicate on the "unique_name" field.
func UniqueNameLT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldUniqueName, v))
}

// UniqueNameLTE applies the LTE predicate on the "unique_name" field.
func UniqueNameLTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldUniqueName, v))
}

// UniqueNameContains applies the Contains predicate on the "unique_name" field.
func UniqueNameContains(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContains(FieldUniqueName, v))
}

// UniqueNameHasPrefix applies the HasPrefix predicate on the "unique_name" field.
func UniqueNameHasPrefix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasPrefix(FieldUniqueName, v))
}

// UniqueNameHasSuffix applies the HasSuffix predicate on the "unique_name" field.
func UniqueNameHasSuffix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasSuffix(FieldUniqueName, v))
}

// UniqueNameIsNil applies the IsNil predicate on the "unique_name" field.
func UniqueNameIsNil() predicate.Organization {
	return predicate.Organization(sql.FieldIsNull(FieldUniqueName))
}

// UniqueNameNotNil applies the NotNil predicate on the "unique_name" field.
func UniqueNameNotNil() predicate.Organization {
	return predicate.Organization(sql.FieldNotNull(FieldUniqueName))
}

// UniqueNameEqualFold applies the EqualFold predicate on the "unique_name" field.
func UniqueNameEqualFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEqualFold(FieldUniqueName, v))
}

// UniqueNameContainsFold applies the ContainsFold predicate on the "unique_name" field.
func UniqueNameContainsFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContainsFold(FieldUniqueName, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContainsFold(FieldName, v))
}

// WebsiteURLEQ applies the EQ predicate on the "website_url" field.
func WebsiteURLEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldWebsiteURL, v))
}

// WebsiteURLNEQ applies the NEQ predicate on the "website_url" field.
func WebsiteURLNEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldWebsiteURL, v))
}

// WebsiteURLIn applies the In predicate on the "website_url" field.
func WebsiteURLIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldWebsiteURL, vs...))
}

// WebsiteURLNotIn applies the NotIn predicate on the "website_url" field.
func WebsiteURLNotIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldWebsiteURL, vs...))
}

// WebsiteURLGT applies the GT predicate on the "website_url" field.
func WebsiteURLGT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldWebsiteURL, v))
}

// WebsiteURLGTE applies the GTE predicate on the "website_url" field.
func WebsiteURLGTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldWebsiteURL, v))
}

// WebsiteURLLT applies the LT predicate on the "website_url" field.
func WebsiteURLLT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldWebsiteURL, v))
}

// WebsiteURLLTE applies the LTE predicate on the "website_url" field.
func WebsiteURLLTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldWebsiteURL, v))
}

// WebsiteURLContains applies the Contains predicate on the "website_url" field.
func WebsiteURLContains(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContains(FieldWebsiteURL, v))
}

// WebsiteURLHasPrefix applies the HasPrefix predicate on the "website_url" field.
func WebsiteURLHasPrefix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasPrefix(FieldWebsiteURL, v))
}

// WebsiteURLHasSuffix applies the HasSuffix predicate on the "website_url" field.
func WebsiteURLHasSuffix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasSuffix(FieldWebsiteURL, v))
}

// WebsiteURLEqualFold applies the EqualFold predicate on the "website_url" field.
func WebsiteURLEqualFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEqualFold(FieldWebsiteURL, v))
}

// WebsiteURLContainsFold applies the ContainsFold predicate on the "website_url" field.
func WebsiteURLContainsFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContainsFold(FieldWebsiteURL, v))
}

// RssFeedURLEQ applies the EQ predicate on the "rss_feed_url" field.
func RssFeedURLEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEQ(FieldRssFeedURL, v))
}

// RssFeedURLNEQ applies the NEQ predicate on the "rss_feed_url" field.
func RssFeedURLNEQ(v string) predicate.Organization {
	return predicate.Organization(sql.FieldNEQ(FieldRssFeedURL, v))
}

// RssFeedURLIn applies the In predicate on the "rss_feed_url" field.
func RssFeedURLIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldIn(FieldRssFeedURL, vs...))
}

// RssFeedURLNotIn applies the NotIn predicate on the "rss_feed_url" field.
func RssFeedURLNotIn(vs ...string) predicate.Organization {
	return predicate.Organization(sql.FieldNotIn(FieldRssFeedURL, vs...))
}

// RssFeedURLGT applies the GT predicate on the "rss_feed_url" field.
func RssFeedURLGT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGT(FieldRssFeedURL, v))
}

// RssFeedURLGTE applies the GTE predicate on the "rss_feed_url" field.
func RssFeedURLGTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldGTE(FieldRssFeedURL, v))
}

// RssFeedURLLT applies the LT predicate on the "rss_feed_url" field.
func RssFeedURLLT(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLT(FieldRssFeedURL, v))
}

// RssFeedURLLTE applies the LTE predicate on the "rss_feed_url" field.
func RssFeedURLLTE(v string) predicate.Organization {
	return predicate.Organization(sql.FieldLTE(FieldRssFeedURL, v))
}

// RssFeedURLContains applies the Contains predicate on the "rss_feed_url" field.
func RssFeedURLContains(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContains(FieldRssFeedURL, v))
}

// RssFeedURLHasPrefix applies the HasPrefix predicate on the "rss_feed_url" field.
func RssFeedURLHasPrefix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasPrefix(FieldRssFeedURL, v))
}

// RssFeedURLHasSuffix applies the HasSuffix predicate on the "rss_feed_url" field.
func RssFeedURLHasSuffix(v string) predicate.Organization {
	return predicate.Organization(sql.FieldHasSuffix(FieldRssFeedURL, v))
}

// RssFeedURLEqualFold applies the EqualFold predicate on the "rss_feed_url" field.
func RssFeedURLEqualFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldEqualFold(FieldRssFeedURL, v))
}

// RssFeedURLContainsFold applies the ContainsFold predicate on the "rss_feed_url" field.
func RssFeedURLContainsFold(v string) predicate.Organization {
	return predicate.Organization(sql.FieldContainsFold(FieldRssFeedURL, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Organization) predicate.Organization {
	return predicate.Organization(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Organization) predicate.Organization {
	return predicate.Organization(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Organization) predicate.Organization {
	return predicate.Organization(sql.NotPredicates(p))
}
