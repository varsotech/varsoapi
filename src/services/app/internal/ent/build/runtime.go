// Code generated by ent, DO NOT EDIT.

package build

import (
	"time"

	"github.com/google/uuid"
	"github.com/varsotech/varsoapi/src/services/app/internal/ent/build/organization"
	"github.com/varsotech/varsoapi/src/services/app/internal/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	organizationMixin := schema.Organization{}.Mixin()
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreateTime is the schema descriptor for create_time field.
	organizationDescCreateTime := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreateTime holds the default value on creation for the create_time field.
	organization.DefaultCreateTime = organizationDescCreateTime.Default.(func() time.Time)
	// organizationDescUniqueName is the schema descriptor for unique_name field.
	organizationDescUniqueName := organizationFields[1].Descriptor()
	// organization.UniqueNameValidator is a validator for the "unique_name" field. It is called by the builders before save.
	organization.UniqueNameValidator = func() func(string) error {
		validators := organizationDescUniqueName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(unique_name string) error {
			for _, fn := range fns {
				if err := fn(unique_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationFields[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() uuid.UUID)
}
